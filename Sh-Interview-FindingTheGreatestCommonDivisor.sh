#!/bin/bash
#Напишите скрипт на bash, который будет искать наибольший общий делитель (НОД, greatest common divisor, GCD) двух чисел. При запуске ваш скрипт не должен ничего писать на экран, а просто ждет ввода двух натуральных чисел через пробел (для этого можно использовать read и указать ему две переменные -- см. пример в видеофрагменте). После ввода чисел скрипт считает их НОД и выводит на экран сообщение "GCD is <посчитанное значение>", например, для чисел 15 и 25 это будет "GCD is 5". После этого скрипт опять входит в режим ожидания двух натуральных чисел. Если в какой-то момент работы пользователь ввел вместо этого пустую строку, то нужно написать на экран "bye" и закончить свою работу.
#Вычисление НОД несложно реализовать с помощью алгоритма Евклида. Вам нужно написать функцию gcd, которая принимает на вход два аргумента (назовем их M и N). Если аргументы равны, то мы нашли НОД -- он равен M (или N), нужно выводить соответствующее сообщение на экран (см. выше). Иначе нужно сравнить аргументы между собой. Если M больше N, то запускаем ту же функцию gcd, но в качестве первого аргумента передаем (M-N), а в качестве второго N. Если же наоборот, M меньше N, то запускаем функцию gcd с первым аргументом M, а вторым (N-M).
#!/bin/bash
gcd_result ()
{
    echo "GCD is " $1;
}
gcd_calc (){
    if [[ $n1 -le 0 || $n2 -le 0 ]]
    then
        gcd_result 0
    else
        if [[ $n1 -eq $n2 ]]
        then
            gcd_result $n1
        elif [[ $n1 -gt $n2 ]]
        then
            let "n1 = n1 - n2"
            gcd_calc $n1 $n2
        else
            let "n2 = n2 - n1"
            gcd_calc $n1 $n2
        fi
    fi
}
while [[ 1 ]]
do
    read n1 n2
    if [[ -z $n1 || -z $n2 ]]
    then
        echo "bye"
        exit
    else
        gcd_calc $n1 $n2
    fi
done